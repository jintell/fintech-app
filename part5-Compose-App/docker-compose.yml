version: '3.8'

services:

  database-service:
    image: mysql:8.0.23
    container_name: database-service
    ports:
      - "3309:3306"
    volumes:
      - "/Users/josleke/workspace/apps/data:/var/lib/mysql"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: financial_service
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - better-net

  better-banking:
    container_name: better-banking
    image: 'josleke/better-banking:latest'
    ports:
      - 9088:9088
    environment:
      # 192.168.8.103 is the current machine IP, docker swarm is easier using service name for containers tp network
      EXTERNAL_DATA_SOURCE: http://192.168.8.103:8080
      REDIS_HOST: redis-server
      REDIS_PORT: 6379
      MYSQL_HOST: database-service
      DATABASE_PORT: 3306
      DATABASE_NAME: financial_service
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
    restart: on-failure
    depends_on:
      - database-service
    networks:
      - better-net

  redis-server:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    restart: on-failure
    # The command below will start the redis server and save the memory data to a dump file on the file system
    # every 60 second, with loglevel as warning
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - better-net

networks:
  better-net: