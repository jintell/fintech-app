plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.openapi.generator' version '6.0.0'
}

group = 'com.jade'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Data and JPA dependency
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-commons'
    // Spring Boot Web and Rest dependency
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // SpringDoc dependencies
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    // Mysql Database dependency
    runtimeOnly 'mysql:mysql-connector-java'
    // @Nullable annotation
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.2'
    // Bean Validation API support
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    //Open Api Generator
    // https://mvnrepository.com/artifact/org.openapitools/openapi-generator
    implementation 'org.openapitools:openapi-generator:6.0.0'
    // Spring Fox Swagger
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    // Project Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Spring test dependency
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Rest Assured dependency
    testImplementation 'io.rest-assured:spring-mock-mvc:5.1.1'
    // Testcontainers
    // https://mvnrepository.com/artifact/org.testcontainers/testcontainers
    testImplementation 'org.testcontainers:testcontainers:1.17.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
    testImplementation 'org.testcontainers:mysql:1.17.3'

}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate{
    generatorName = "spring"
    inputSpec = "$rootDir/open-api/account-info-openapi.yaml".toString()
    outputDir = "$buildDir/open-api".toString()
    apiPackage = "org.openapitools.example.api"
    invokerPackage = "org.openapitools.example.invoker"
    modelPackage = "com.jade.fintech.model"
    configOptions = [
            dateLibrary: "java11",
            basePackage: "com.jade.fintech.model",
            interfaceOnly: "true"
    ]
    globalProperties = [
            modelDocs: "false",
            generateApiDocumentation: "false"
    ]
}

task copyFiles(type: Copy) {
    from 'build/open-api/src/main/java/com/jade/fintech/model'
    into 'src/main/java/com/jade/fintech/model'
    include '*.java'
}

task codegen(dependsOn: clean){
    doLast{
        println("Finished generating Code...")
    }
}

tasks.copyFiles.dependsOn 'openApiGenerate'
tasks.clean.dependsOn 'copyFiles'

